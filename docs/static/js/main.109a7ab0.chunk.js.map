{"version":3,"sources":["gradient-generator.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["GradientGenerator","props","colorA","colorB","window","onload","changeColor","pickerA","document","getElementById","pickerB","value","hexTextA","hexTextB","generate","innerHTML","addEventListener","event","randomColorGenerator","characters","randomColorArray","i","randomIndex","Math","floor","random","length","push","join","events","this","hexToRgb","target","r","g","b","hex","result","exec","parseInt","gutter","span","type","id","style","width","block","justify","align","onChange","changeAlpha","bind","min","max","defaultValue","Component","App","Input","TextArea","canvas","fabric","Canvas","height","fontColor","title","subTitle","description","blob","background","illustration","illustrationList","name","path","state","textAlign","filterIllustration","renderCanvas","Object","prototype","transparentCorners","originX","originY","renderBackground","renderLogo","renderTitle","renderSubTitle","renderDescription","renderRandomBlob","defaultIllustration","renderIllustration","renderAll","remove","Rect","fill","top","left","selectable","grad","Gradient","coords","x1","y1","x2","y2","colorStops","color","offset","add","sendToBack","svgString","blobs2","seed","extraPoints","randomness","size","stroke","strokeWidth","loadSVGFromString","objects","options","util","groupSVGElements","set","centerObjectH","scale","loadSVGFromURL","shape","text","Text","fontSize","setState","list","forEach","search","hoverable","onClick","preview","src","tagName","parentElement","d","createElement","href","toDataURL","format","download","click","marginTop","saveCover","placeholder","changeTitle","Group","changeTextAlign","Button","AlignLeftOutlined","AlignCenterOutlined","AlignRightOutlined","changeSubTitle","changeDescription","extra","overflowY","renderIllustrationBox","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.109a7ab0.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {Button, Col, Row} from \"antd\";\n\nclass GradientGenerator extends Component<{changeColor: Function}> {\n  public colorA = \"#B149FF\";\n  public colorB = \"#00ffff\";\n\n  constructor(props: {changeColor: Function}) {\n    super(props);\n\n    window.onload = () => {\n      this.props.changeColor(this.colorA, this.colorB);\n    }\n  }\n\n  componentDidMount() {\n    let pickerA = document.getElementById(\"color-a\") as HTMLInputElement,\n      pickerB = document.getElementById(\"color-b\") as HTMLInputElement;\n\n    const colorA = pickerA.value,\n      colorB = pickerB.value;\n\n    let hexTextA = document.getElementById(\"hexTextA\") as HTMLParagraphElement,\n      hexTextB = document.getElementById(\"hexTextB\") as HTMLParagraphElement;\n\n    let generate = document.getElementById(\"generate\") as HTMLButtonElement;\n\n    hexTextA.innerHTML = colorA;\n    hexTextB.innerHTML = colorB;\n\n    pickerA.addEventListener(\"input\", (event) => {\n      hexTextA.innerHTML = pickerA.value;\n      this.props.changeColor(pickerA.value, pickerB.value);\n    }, false);\n\n    pickerB.addEventListener(\"input\", (event) => {\n      hexTextB.innerHTML = pickerB.value;\n      this.props.changeColor(pickerA.value, pickerB.value);\n    }, false);\n\n    generate.addEventListener(\"click\", (event) => {\n      pickerA.value = this.randomColorGenerator();\n      pickerB.value = this.randomColorGenerator();\n      this.props.changeColor(pickerA.value, pickerB.value);\n    })\n  }\n\n  randomColorGenerator() {\n    let characters = [\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",0,1,2,3,4,5,6,7,8,9];\n    let randomColorArray = [];\n    for (let i = 0; i < 6; i++) {\n      let randomIndex = Math.floor(Math.random()*characters.length);\n      randomColorArray.push(characters[randomIndex])\n    }\n\n    return `#${randomColorArray.join(\"\")}`;\n  }\n\n  changeAlpha(events: any) {\n    let pickerA = document.getElementById(\"color-a\") as HTMLInputElement,\n      pickerB = document.getElementById(\"color-b\") as HTMLInputElement;\n\n    let colorA = this.hexToRgb(pickerA.value);\n    let colorB = this.hexToRgb(pickerB.value);\n\n    (document.getElementById(\"color-range\") as HTMLDivElement).innerHTML = `${events.target.value}%`;\n\n    this.props.changeColor(\n      `rgba(${colorA.r}, ${colorA.g}, ${colorA.b}, ${events.target.value}%)`,\n      `rgba(${colorB.r}, ${colorB.g}, ${colorB.b}, ${events.target.value}%)`,\n    );\n  }\n\n  hexToRgb(hex: string): {r: number, g: number, b: number} {\n    let result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? {\n      r: parseInt(result[1], 16),\n      g: parseInt(result[2], 16),\n      b: parseInt(result[3], 16)\n    } : {r: 0, g: 0, b: 0};\n  }\n\n  render() {\n    return (\n      <Row gutter={[8, 8]}>\n        <Col span={12}>\n          <form>\n            <input type=\"color\" id=\"color-a\" style={{width: '100%'}} value={this.colorA}/>\n            <p id=\"hexTextA\"></p>\n          </form>\n        </Col>\n        <Col span={12}>\n          <form>\n            <input type=\"color\" id=\"color-b\" style={{width: '100%'}} value={this.colorB}/>\n            <p id=\"hexTextB\"></p>\n          </form>\n        </Col>\n        <Col span={24}>\n          <Button id=\"generate\" block>随机背景色</Button>\n        </Col>\n        <Col span={24}>\n          <form>\n            <Row gutter={[4, 4]} justify={\"center\"} align={\"middle\"}>\n              <Col span={24}> Alpha <span id={\"color-range\"}>100%</span> </Col>\n              <Col span={24}>\n                <input type=\"range\" id=\"alpha\" style={{width: '100%'}} onChange={this.changeAlpha.bind(this)} min=\"60\" max=\"100\" defaultValue={100}/>\n              </Col>\n            </Row>\n          </form>\n        </Col>\n      </Row>\n    )\n  }\n}\n\n\nexport default GradientGenerator;\n","import React, {Component} from 'react';\nimport './App.scss';\nimport GradientGenerator from \"./gradient-generator\"\nimport {fabric} from \"fabric\";\nimport * as blobs2 from \"blobs/v2\";\nimport {Button, Card, Col, Image, Input, Row, Radio} from 'antd';\nimport {\n  AlignCenterOutlined,\n  AlignLeftOutlined,\n  AlignRightOutlined\n} from '@ant-design/icons';\n\nconst {TextArea} = Input;\n\nclass App extends Component<any, any> {\n  private canvas: fabric.Canvas = new fabric.Canvas('canvas');\n  public width = 396;\n  public height = 560;\n  public fontColor: string = \"white\";\n  public title: fabric.Text | undefined;\n  public subTitle: fabric.Text | undefined;\n  public description: fabric.Text | undefined;\n  public blob: fabric.Object | undefined;\n  public background: fabric.Object | undefined;\n  public illustration: fabric.Object | undefined;\n\n  private illustrationList: { name: string, path: string }[] = [\n    {name: 'bird', path: \"/assets/images/illustration/bird.svg\"},\n    {name: 'bird-1', path: \"/assets/images/illustration/bird-1.svg\"},\n  ]\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      textAlign: 'center',\n      filterIllustration: \"\",\n    };\n  }\n\n  componentDidMount() {\n    this.renderCanvas();\n  }\n\n  renderCanvas() {\n    this.canvas = new fabric.Canvas('canvas');\n    fabric.Object.prototype.transparentCorners = false;\n    fabric.Object.prototype.originX = fabric.Object.prototype.originY = 'center';\n\n    this.renderBackground(\"grey\", \"grey\");\n    this.renderLogo();\n    this.renderTitle();\n    this.renderSubTitle();\n    this.renderDescription();\n    this.renderRandomBlob();\n\n    const defaultIllustration = this.illustrationList[Math.floor(Math.random() * this.illustrationList.length)]\n    this.renderIllustration(defaultIllustration.path);\n    this.canvas.renderAll();\n  }\n\n  renderBackground(colorA: string, colorB: string) {\n    if (this.background) {\n      this.canvas.remove(this.background);\n    }\n    this.background = new fabric.Rect({\n      fill: '#f55',\n      top: this.height / 2,\n      left: this.width / 2,\n      width: 396,\n      height: 560,\n      selectable: false\n    });\n\n    const grad = new fabric.Gradient({\n      type: 'linear',\n      coords: {\n        x1: 0,\n        y1: 0,\n        x2: this.canvas.width,\n        y2: this.canvas.height,\n      },\n      colorStops: [\n        {\n          color: colorA,\n          offset: \"0\",\n        },\n        {\n          color: colorB,\n          offset: \"1\",\n        }\n      ]\n    });\n    this.background.fill = grad;\n    this.canvas.add(this.background);\n    this.background.sendToBack();\n    this.canvas.renderAll();\n  }\n\n  renderRandomBlob() {\n    if (this.blob) {\n      this.canvas.remove(this.blob);\n    }\n    let svgString = blobs2.svg(\n      {\n        seed: Math.random(),\n        extraPoints: 4,\n        randomness: 3,\n        size: 256,\n      },\n      {\n        fill: \"rgba(255,255,255,0.1)\", // 🚨 NOT SANITIZED\n        stroke: \"none\", // 🚨 NOT SANITIZED\n        strokeWidth: 4,\n      },\n    );\n\n    fabric.loadSVGFromString(svgString, (objects, options) => {\n      this.blob = fabric.util.groupSVGElements(objects, options);\n      this.blob.set({\n        top: this.height / 2,\n        left: 10,\n        originX: \"center\",\n        originY: \"top\",\n        selectable: false\n      })\n      this.canvas.centerObjectH(this.blob)\n      this.canvas.add(this.blob.scale(1));\n      this.canvas.renderAll();\n    });\n  }\n\n  renderIllustration(path: string) {\n    if (this.illustration) {\n      this.canvas.remove(this.illustration);\n    }\n    fabric.loadSVGFromURL(path, (objects, options) => {\n      this.illustration = fabric.util.groupSVGElements(objects, options);\n      this.illustration.set({\n        top: this.height / 2,\n        left: this.width - 140,\n        originX: \"center\",\n        originY: \"top\",\n        selectable: false\n      });\n      this.canvas.centerObjectH(this.illustration);\n      this.canvas.add(this.illustration.scale(0.3));\n      this.canvas.renderAll();\n    });\n  }\n\n  renderLogo() {\n    fabric.loadSVGFromURL('/assets/images/logo-fill.svg', (objects, options) => {\n      let shape = fabric.util.groupSVGElements(objects, options);\n      shape.set({\n        top: 10,\n        left: 10,\n        originX: \"left\",\n        originY: \"top\",\n        selectable: false\n      })\n      this.canvas.add(shape.scale(0.07));\n      this.canvas.renderAll();\n    });\n  }\n\n\n  changeTitle(event: any = null) {\n    this.title?.set({text: event.target.value});\n    this.canvas.renderAll();\n  }\n\n  renderTitle() {\n    let string = \"Book Title\";\n    this.title = new fabric.Text(string, {\n      fontSize: 32,\n      originX: 'center',\n      originY: 'center',\n      top: 80,\n      fill: this.fontColor,\n      textAlign: 'center',\n      selectable: false\n    });\n\n    this.canvas.centerObjectH(this.title);\n    this.canvas.add(this.title);\n  }\n\n  changeSubTitle(event: any = null) {\n    this.subTitle?.set({text: event.target.value})\n    this.canvas.renderAll();\n  }\n\n  renderSubTitle() {\n    this.subTitle = new fabric.Text('Book SubTitle', {\n      fontSize: 22,\n      originX: 'center',\n      originY: 'center',\n      top: 120,\n      fill: this.fontColor,\n      selectable: false\n    });\n    this.canvas.centerObjectH(this.subTitle);\n    this.canvas.add(this.subTitle);\n  }\n\n  changeDescription(event: any = null) {\n    this.description?.set({text: event.target.value})\n    this.canvas.renderAll();\n  }\n\n  renderDescription() {\n    this.description = new fabric.Text('Description', {\n      fontSize: 16,\n      originX: 'center',\n      originY: 'center',\n      top: this.height - 20,\n      fill: this.fontColor,\n      selectable: false\n    });\n    this.canvas.centerObjectH(this.description);\n    this.canvas.add(this.description);\n  }\n\n  filterIllustration(event: any = null) {\n    this.setState({\n      filterIllustration: event.target.value,\n    })\n  }\n\n  renderIllustrationBox() {\n    const list: any[] = [];\n    this.illustrationList.forEach(illustration => {\n      if (this.state.filterIllustration && this.state.filterIllustration.length) {\n        if (illustration.name.search(this.state.filterIllustration) > -1) {\n          list.push(\n            <Col span={6}>\n              <Card\n                hoverable\n                style={{width: \"100%\"}}\n              >\n                <Image\n                  onClick={() => this.renderIllustration(illustration.path)}\n                  preview={false}\n                  width={\"100%\"}\n                  src={illustration.path}\n                />\n                <Button block type={\"text\"}\n                        onClick={() => this.renderIllustration(illustration.path)}>{illustration.name}</Button>\n              </Card>\n            </Col>\n          );\n        }\n      } else {\n        list.push(\n          <Col span={6}>\n            <Card\n              hoverable\n              style={{width: \"100%\"}}\n            >\n              <Image\n                onClick={() => this.renderIllustration(illustration.path)}\n                preview={false}\n                width={\"100%\"}\n                src={illustration.path}\n              />\n              <Button block type={\"text\"}\n                      onClick={() => this.renderIllustration(illustration.path)}>{illustration.name}</Button>\n            </Card>\n          </Col>\n        );\n      }\n    })\n\n    return list;\n  }\n\n  changeColor(event: any) {\n    let target = event.target;\n    if (target.tagName === \"SPAN\") {\n      target = event.target.parentElement;\n    }\n    if (target.style.color === \"white\") {\n      target.style.color = \"black\";\n    } else {\n      target.style.color = \"white\";\n    }\n\n    this.fontColor = target.style.color;\n\n    this.title?.set({fill: this.fontColor});\n    this.subTitle?.set({fill: this.fontColor});\n    this.description?.set({fill: this.fontColor});\n    this.canvas.renderAll();\n  }\n\n  changeTextAlign(event: any) {\n    this.setState({\n      textAlign: event.target.value\n    });\n\n    switch (event.target.value) {\n      case \"left\":\n        this.title?.set({\n          textAlign: event.target.value, originX: event.target.value, left: 65,\n        });\n        this.subTitle?.set({\n          textAlign: event.target.value, originX: event.target.value, left: 65,\n        });\n        break;\n      case \"center\":\n        this.title?.set({\n          textAlign: event.target.value, originX: event.target.value,\n        });\n        this.subTitle?.set({\n          textAlign: event.target.value, originX: event.target.value,\n        });\n        if (this.title && this.subTitle) {\n          this.canvas.centerObjectH(this.title);\n          this.canvas.centerObjectH(this.subTitle);\n        }\n        break;\n      case \"right\":\n        this.title?.set({\n          textAlign: event.target.value, originX: event.target.value, left: this.width - 65,\n        });\n        this.subTitle?.set({\n          textAlign: event.target.value, originX: event.target.value, left: this.width - 65,\n        });\n        break;\n    }\n    this.canvas.renderAll();\n  }\n\n  saveCover() {\n    const d = document.createElement(\"a\");\n    d.href = this.canvas.toDataURL({format: 'jpeg'});\n    d.download = \"cover\";\n    d.click();\n  }\n\n  render() {\n    return (\n      <div id={\"main\"} style={{marginTop: '5vh'}}>\n        <Row gutter={16}>\n          <Col span={8}>\n            <Row gutter={[8, 16]}>\n              <canvas id={\"canvas\"} width={this.width} height={this.height}></canvas>\n              <Button type={\"primary\"} onClick={this.saveCover.bind(this)} style={{width: '100%'}}>\n                保存存图片\n              </Button>\n            </Row>\n          </Col>\n          <Col span={16}>\n            <Row gutter={[16, 16]}>\n              <Col span={24}>\n                <Row gutter={8}>\n                  <Col span={16}>\n                    <Input placeholder=\"标题\" defaultValue={\"Book Title\"} onChange={this.changeTitle.bind(this)} />\n                  </Col>\n                  <Col span={8}>\n                    <Row justify={\"end\"} gutter={8}>\n                      <Col><Button type={\"primary\"} onClick={this.changeColor.bind(this)} style={{color: 'white'}}>字体颜色</Button></Col>\n                      <Col>\n                        <Radio.Group value={this.state.textAlign} onChange={this.changeTextAlign.bind(this)}>\n                          <Radio.Button value=\"left\"><AlignLeftOutlined /></Radio.Button>\n                          <Radio.Button value=\"center\"><AlignCenterOutlined /></Radio.Button>\n                          <Radio.Button value=\"right\"><AlignRightOutlined /></Radio.Button>\n                        </Radio.Group>\n                      </Col>\n                    </Row>\n                  </Col>\n                </Row>\n              </Col>\n              <Col span={24}>\n                <Input placeholder=\"副标题\" defaultValue={\"Book SubTitle\"} onChange={this.changeSubTitle.bind(this)} />\n              </Col>\n              <Col span={24}>\n                <Input placeholder=\"描述\"\n                       defaultValue=\"Description\"\n                       onChange={this.changeDescription.bind(this)} />\n              </Col>\n              <Col span={24}>\n                <Card title=\"选择插画\" extra={\n                  <Row gutter={8}>\n                    <Col><Button onClick={this.renderRandomBlob.bind(this)}>更换背景</Button></Col>\n                    <Col>\n                      <Input style={{width: '500px'}} placeholder={'筛选插画'} onChange={this.filterIllustration.bind(this)}/>\n                    </Col>\n                  </Row>\n                }>\n                  <Row gutter={[8, 8]} style={{height: '300px', overflowY: 'scroll'}}>\n                    {this.renderIllustrationBox()}\n                  </Row>\n                </Card>\n              </Col>\n              <Col span={24}>\n                <Card title=\"设置背景\">\n                  <GradientGenerator changeColor={this.renderBackground.bind(this)} />\n                </Card>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import {ReportHandler} from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}