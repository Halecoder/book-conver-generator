{"version":3,"sources":["gradient-generator.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["GradientGenerator","props","state","colorA","colorB","window","onload","changeColor","pickerA","document","getElementById","pickerB","value","hexTextA","hexTextB","generate","innerHTML","addEventListener","event","setState","randomColorGenerator","characters","randomColorArray","i","randomIndex","Math","floor","random","length","push","join","events","this","hexToRgb","target","r","g","b","hex","result","exec","parseInt","gutter","span","type","id","style","width","block","justify","align","onChange","changeAlpha","bind","min","max","defaultValue","Component","Option","Select","App","canvas","fabric","Canvas","height","fontColor","title","subTitle","description","blob","background","illustration","fonts","label","name","illustrationList","path","textAlign","filterIllustration","font","renderCanvas","Object","prototype","transparentCorners","originX","originY","renderBackground","renderLogo","renderTitle","renderSubTitle","renderDescription","renderRandomBlob","defaultIllustration","renderIllustration","renderAll","remove","Rect","fill","top","left","selectable","grad","Gradient","coords","x1","y1","x2","y2","colorStops","color","offset","add","sendToBack","svgString","blobs2","seed","extraPoints","randomness","size","stroke","strokeWidth","loadSVGFromString","objects","options","util","groupSVGElements","set","centerObjectH","scale","setImage","Image","fromURL","image","scaleX","scaleY","loadSVGFromURL","shape","text","Text","fontSize","fontFamily","list","forEach","search","hoverable","onClick","preview","src","tagName","parentElement","selectFont","reader","FileReader","toString","files","readAsDataURL","d","createElement","href","toDataURL","format","download","click","marginTop","saveCover","placeholder","changeTitle","renderFonts","Group","changeTextAlign","Button","AlignLeftOutlined","AlignCenterOutlined","AlignRightOutlined","changeSubTitle","changeDescription","extra","className","hidden","uploadIllustration","overflowY","renderIllustrationBox","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"2WA4HeA,E,kDAxHb,WAAYC,GAAiC,IAAD,8BAC1C,cAAMA,IAEDC,MAAQ,CACXC,OAAQ,UACRC,OAAQ,WAGVC,OAAOC,OAAS,WACd,EAAKL,MAAMM,YAAY,EAAKL,MAAMC,OAAQ,EAAKD,MAAME,SATb,E,qDAa5C,WAAqB,IAAD,OACdI,EAAUC,SAASC,eAAe,WAClCC,EAAUF,SAASC,eAAe,WAEhCP,EAASK,EAAQI,MACrBR,EAASO,EAAQC,MAEfC,EAAWJ,SAASC,eAAe,YACnCI,EAAWL,SAASC,eAAe,YAEnCK,EAAWN,SAASC,eAAe,YAEvCG,EAASG,UAAYb,EACrBW,EAASE,UAAYZ,EAErBI,EAAQS,iBAAiB,SAAS,SAACC,GACjCL,EAASG,UAAYR,EAAQI,MAC7B,EAAKO,SAAS,CACZhB,OAAQK,EAAQI,QAElB,EAAKX,MAAMM,YAAYC,EAAQI,MAAOD,EAAQC,UAC7C,GAEHD,EAAQM,iBAAiB,SAAS,SAACC,GACjCJ,EAASE,UAAYL,EAAQC,MAC7B,EAAKO,SAAS,CACZf,OAAQO,EAAQC,QAElB,EAAKX,MAAMM,YAAYC,EAAQI,MAAOD,EAAQC,UAC7C,GAEHG,EAASE,iBAAiB,SAAS,SAACC,GAClCV,EAAQI,MAAQ,EAAKQ,uBACrBT,EAAQC,MAAQ,EAAKQ,uBACrB,EAAKnB,MAAMM,YAAYC,EAAQI,MAAOD,EAAQC,Y,kCAIlD,WAGE,IAFA,IAAIS,EAAa,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACxDC,EAAmB,GACdC,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAIC,EAAcC,KAAKC,MAAMD,KAAKE,SAASN,EAAWO,QACtDN,EAAiBO,KAAKR,EAAWG,IAGnC,MAAM,IAAN,OAAWF,EAAiBQ,KAAK,O,yBAGnC,SAAYC,GACV,IAAIvB,EAAUC,SAASC,eAAe,WACpCC,EAAUF,SAASC,eAAe,WAEhCP,EAAS6B,KAAKC,SAASzB,EAAQI,OAC/BR,EAAS4B,KAAKC,SAAStB,EAAQC,OAElCH,SAASC,eAAe,eAAkCM,UAA3D,UAA0Ee,EAAOG,OAAOtB,MAAxF,KAEAoB,KAAK/B,MAAMM,YAAX,eACUJ,EAAOgC,EADjB,aACuBhC,EAAOiC,EAD9B,aACoCjC,EAAOkC,EAD3C,aACiDN,EAAOG,OAAOtB,MAD/D,qBAEUR,EAAO+B,EAFjB,aAEuB/B,EAAOgC,EAF9B,aAEoChC,EAAOiC,EAF3C,aAEiDN,EAAOG,OAAOtB,MAF/D,S,sBAMF,SAAS0B,GACP,IAAIC,EAAS,4CAA4CC,KAAKF,GAC9D,OAAOC,EAAS,CACdJ,EAAGM,SAASF,EAAO,GAAI,IACvBH,EAAGK,SAASF,EAAO,GAAI,IACvBF,EAAGI,SAASF,EAAO,GAAI,KACrB,CAACJ,EAAG,EAAGC,EAAG,EAAGC,EAAG,K,oBAGtB,WACE,OACE,eAAC,IAAD,CAAKK,OAAQ,CAAC,EAAG,GAAjB,UACE,cAAC,IAAD,CAAKC,KAAM,GAAX,SACE,iCACE,uBAAOC,KAAK,QAAQC,GAAG,UAAUC,MAAO,CAACC,MAAO,QAASnC,MAAOoB,KAAK9B,MAAMC,SAC3E,mBAAG0C,GAAG,kBAGV,cAAC,IAAD,CAAKF,KAAM,GAAX,SACE,iCACE,uBAAOC,KAAK,QAAQC,GAAG,UAAUC,MAAO,CAACC,MAAO,QAASnC,MAAOoB,KAAK9B,MAAME,SAC3E,mBAAGyC,GAAG,kBAGV,cAAC,IAAD,CAAKF,KAAM,GAAX,SACE,cAAC,IAAD,CAAQE,GAAG,WAAWG,OAAK,EAA3B,8CAEF,cAAC,IAAD,CAAKL,KAAM,GAAX,SACE,+BACE,eAAC,IAAD,CAAKD,OAAQ,CAAC,EAAG,GAAIO,QAAS,SAAUC,MAAO,SAA/C,UACE,eAAC,IAAD,CAAKP,KAAM,GAAX,oBAAsB,sBAAME,GAAI,cAAV,kBAAtB,OACA,cAAC,IAAD,CAAKF,KAAM,GAAX,SACE,uBAAOC,KAAK,QAAQC,GAAG,QAAQC,MAAO,CAACC,MAAO,QAASI,SAAUnB,KAAKoB,YAAYC,KAAKrB,MAAOsB,IAAI,KAAKC,IAAI,MAAMC,aAAc,sB,GA9G/GC,a,wFCSxBC,EAAWC,IAAXD,OA6cOE,E,kDAjbb,WAAY3D,GAAa,IAAD,8BACtB,cAAMA,IAzBA4D,OAAwB,IAAIC,SAAOC,OAAO,UAwB1B,EAvBjBhB,MAAQ,IAuBS,EAtBjBiB,OAAS,IAsBQ,EArBjBC,UAAoB,QAqBH,EApBjBC,WAoBiB,IAnBjBC,cAmBiB,IAlBjBC,iBAkBiB,IAjBjBC,UAiBiB,IAhBjBC,gBAgBiB,IAfjBC,kBAeiB,IAbjBC,MAAQ,CACb,CAACC,MAAO,2BAAQC,KAAM,2BACtB,CAACD,MAAO,mCAAgBC,KAAM,0BAC9B,CAACD,MAAO,8BAAWC,KAAM,6BACzB,CAACD,MAAO,kCAAeC,KAAM,0BAC7B,CAACD,MAAO,kCAAeC,KAAM,2BAQP,EALhBC,iBAAqD,CAC3D,CAACD,KAAM,OAAQE,KAAM,wCACrB,CAACF,KAAM,SAAUE,KAAM,2CAKvB,EAAK1E,MAAQ,CACX2E,UAAW,SACXC,mBAAoB,GACpBC,KAAM,EAAKP,MAAM,GAAGE,MALA,E,qDASxB,WACE1C,KAAKgD,iB,0BAGP,WACEhD,KAAK6B,OAAS,IAAIC,SAAOC,OAAO,UAChCD,SAAOmB,OAAOC,UAAUC,oBAAqB,EAC7CrB,SAAOmB,OAAOC,UAAUE,QAAUtB,SAAOmB,OAAOC,UAAUG,QAAU,SAEpErD,KAAKsD,iBAAiB,OAAQ,QAC9BtD,KAAKuD,aACLvD,KAAKwD,cACLxD,KAAKyD,iBACLzD,KAAK0D,oBACL1D,KAAK2D,mBAEL,IAAMC,EAAsB5D,KAAK2C,iBAAiBlD,KAAKC,MAAMD,KAAKE,SAAWK,KAAK2C,iBAAiB/C,SACnGI,KAAK6D,mBAAmBD,EAAoBhB,MAC5C5C,KAAK6B,OAAOiC,c,8BAGd,SAAiB3F,EAAgBC,GAC3B4B,KAAKsC,YACPtC,KAAK6B,OAAOkC,OAAO/D,KAAKsC,YAE1BtC,KAAKsC,WAAa,IAAIR,SAAOkC,KAAK,CAChCC,KAAM,OACNC,IAAKlE,KAAKgC,OAAS,EACnBmC,KAAMnE,KAAKe,MAAQ,EACnBA,MAAO,IACPiB,OAAQ,IACRoC,YAAY,IAGd,IAAMC,EAAO,IAAIvC,SAAOwC,SAAS,CAC/B1D,KAAM,SACN2D,OAAQ,CACNC,GAAI,EACJC,GAAI,EACJC,GAAI1E,KAAK6B,OAAOd,MAChB4D,GAAI3E,KAAK6B,OAAOG,QAElB4C,WAAY,CACV,CACEC,MAAO1G,EACP2G,OAAQ,KAEV,CACED,MAAOzG,EACP0G,OAAQ,QAId9E,KAAKsC,WAAW2B,KAAOI,EACvBrE,KAAK6B,OAAOkD,IAAI/E,KAAKsC,YACrBtC,KAAKsC,WAAW0C,aAChBhF,KAAK6B,OAAOiC,c,8BAGd,WAAoB,IAAD,OACb9D,KAAKqC,MACPrC,KAAK6B,OAAOkC,OAAO/D,KAAKqC,MAE1B,IAAI4C,EAAYC,MACd,CACEC,KAAM1F,KAAKE,SACXyF,YAAa,EACbC,WAAY,EACZC,KAAM,KAER,CACErB,KAAM,wBACNsB,OAAQ,OACRC,YAAa,IAIjB1D,SAAO2D,kBAAkBR,GAAW,SAACS,EAASC,GAC5C,EAAKtD,KAAOP,SAAO8D,KAAKC,iBAAiBH,EAASC,GAClD,EAAKtD,KAAKyD,IAAI,CACZ5B,IAAK,EAAKlC,OAAS,EACnBoB,QAAS,SACTC,QAAS,MACTe,YAAY,IAEd,EAAKvC,OAAOkE,cAAc,EAAK1D,MAC/B,EAAKR,OAAOkD,IAAI,EAAK1C,KAAK2D,MAAM,IAChC,EAAKnE,OAAOiC,iB,gCAIhB,SAAmBlB,GACb5C,KAAKuC,cACPvC,KAAK6B,OAAOkC,OAAO/D,KAAKuC,cAE1BvC,KAAKiG,SAASrD,K,sBAGhB,SAAiBA,GAAe,IAAD,OAC7Bd,SAAOoE,MAAMC,QAAQvD,GAAM,SAACwD,GAC1B,GAAIA,GAASA,EAAMrF,OAASqF,EAAMpE,OAAQ,CACxC,IAAIqE,EAAS,IAAMD,EAAMrF,MACrBuF,EAAUF,EAAMpE,OAASqE,EAAUD,EAAMpE,OAC7CoE,EAAMN,IAAI,CACRQ,OAAQA,EACRD,OAAQA,EACRnC,IAAK,EAAKlC,OAAS,GAAM,IAAKoE,EAAMpE,OAASqE,GAAS,EACtDjD,QAAS,SACTC,QAAS,MACTe,YAAY,IAGZ,EAAK7B,cACP,EAAKV,OAAOkC,OAAO,EAAKxB,cAG1B,EAAKA,aAAe6D,EACpB,EAAKvE,OAAOkD,IAAI,EAAKxC,cACrB,EAAKV,OAAOkE,cAAc,EAAKxD,cAC/B,EAAKV,OAAOiC,iB,wBAIhB,WAAc,IAAD,OACXhC,SAAOyE,eAAe,gCAAgC,SAACb,EAASC,GAC9D,IAAIa,EAAQ1E,SAAO8D,KAAKC,iBAAiBH,EAASC,GAClDa,EAAMV,IAAI,CACR5B,IAAK,GACLC,KAAM,GACNf,QAAS,OACTC,QAAS,MACTe,YAAY,IAEd,EAAKvC,OAAOkD,IAAIyB,EAAMR,MAAM,MAC5B,EAAKnE,OAAOiC,iB,yBAKhB,WAAgC,IAAD,EAAnB5E,EAAmB,uDAAN,KACvB,UAAAc,KAAKkC,aAAL,SAAY4D,IAAI,CAACW,KAAMvH,EAAMgB,OAAOtB,QACpCoB,KAAK6B,OAAOiC,c,yBAGd,WAEE9D,KAAKkC,MAAQ,IAAIJ,SAAO4E,KADX,aACwB,CACnCC,SAAU,GACVC,WAAY5G,KAAK9B,MAAM6E,KACvBK,QAAS,SACTC,QAAS,SACTa,IAAK,GACLD,KAAMjE,KAAKiC,UACXY,UAAW,SACXuB,YAAY,IAGdpE,KAAK6B,OAAOkE,cAAc/F,KAAKkC,OAC/BlC,KAAK6B,OAAOkD,IAAI/E,KAAKkC,S,4BAGvB,WAAmC,IAAD,EAAnBhD,EAAmB,uDAAN,KAC1B,UAAAc,KAAKmC,gBAAL,SAAe2D,IAAI,CAACW,KAAMvH,EAAMgB,OAAOtB,QACvCoB,KAAK6B,OAAOiC,c,4BAGd,WACE9D,KAAKmC,SAAW,IAAIL,SAAO4E,KAAK,gBAAiB,CAC/CC,SAAU,GACVC,WAAY5G,KAAK9B,MAAM6E,KACvBK,QAAS,SACTC,QAAS,SACTa,IAAK,IACLD,KAAMjE,KAAKiC,UACXmC,YAAY,IAEdpE,KAAK6B,OAAOkE,cAAc/F,KAAKmC,UAC/BnC,KAAK6B,OAAOkD,IAAI/E,KAAKmC,Y,+BAGvB,WAAsC,IAAD,EAAnBjD,EAAmB,uDAAN,KAC7B,UAAAc,KAAKoC,mBAAL,SAAkB0D,IAAI,CAACW,KAAMvH,EAAMgB,OAAOtB,QAC1CoB,KAAK6B,OAAOiC,c,+BAGd,WACE9D,KAAKoC,YAAc,IAAIN,SAAO4E,KAAK,cAAe,CAChDC,SAAU,GACVC,WAAY5G,KAAK9B,MAAM6E,KACvBK,QAAS,SACTC,QAAS,SACTa,IAAKlE,KAAKgC,OAAS,GACnBiC,KAAMjE,KAAKiC,UACXmC,YAAY,IAEdpE,KAAK6B,OAAOkE,cAAc/F,KAAKoC,aAC/BpC,KAAK6B,OAAOkD,IAAI/E,KAAKoC,e,gCAGvB,WAAuC,IAApBlD,EAAmB,uDAAN,KAC9Bc,KAAKb,SAAS,CACZ2D,mBAAoB5D,EAAMgB,OAAOtB,U,mCAIrC,WAAyB,IAAD,OAChBiI,EAAc,GA2CpB,OA1CA7G,KAAK2C,iBAAiBmE,SAAQ,SAAAvE,GACxB,EAAKrE,MAAM4E,oBAAsB,EAAK5E,MAAM4E,mBAAmBlD,OAC7D2C,EAAaG,KAAKqE,OAAO,EAAK7I,MAAM4E,qBAAuB,GAC7D+D,EAAKhH,KACH,cAAC,IAAD,CAAKc,KAAM,EAAX,SACE,eAAC,IAAD,CACEqG,WAAS,EACTlG,MAAO,CAACC,MAAO,QAFjB,UAIE,cAAC,IAAD,CACEkG,QAAS,kBAAM,EAAKpD,mBAAmBtB,EAAaK,OACpDsE,SAAS,EACTnG,MAAO,OACPoG,IAAK5E,EAAaK,OAEpB,cAAC,IAAD,CAAQ5B,OAAK,EAACJ,KAAM,OACZqG,QAAS,kBAAM,EAAKpD,mBAAmBtB,EAAaK,OAD5D,SACoEL,EAAaG,aAMzFmE,EAAKhH,KACH,cAAC,IAAD,CAAKc,KAAM,EAAX,SACE,eAAC,IAAD,CACEqG,WAAS,EACTlG,MAAO,CAACC,MAAO,QAFjB,UAIE,cAAC,IAAD,CACEkG,QAAS,kBAAM,EAAKpD,mBAAmBtB,EAAaK,OACpDsE,SAAS,EACTnG,MAAO,OACPoG,IAAK5E,EAAaK,OAEpB,cAAC,IAAD,CAAQ5B,OAAK,EAACJ,KAAM,OACZqG,QAAS,kBAAM,EAAKpD,mBAAmBtB,EAAaK,OAD5D,SACoEL,EAAaG,gBAOpFmE,I,yBAGT,SAAY3H,GAAa,IAAD,MAClBgB,EAAShB,EAAMgB,OACI,SAAnBA,EAAOkH,UACTlH,EAAShB,EAAMgB,OAAOmH,eAEG,UAAvBnH,EAAOY,MAAM+D,MACf3E,EAAOY,MAAM+D,MAAQ,QAErB3E,EAAOY,MAAM+D,MAAQ,QAGvB7E,KAAKiC,UAAY/B,EAAOY,MAAM+D,MAE9B,UAAA7E,KAAKkC,aAAL,SAAY4D,IAAI,CAAC7B,KAAMjE,KAAKiC,YAC5B,UAAAjC,KAAKmC,gBAAL,SAAe2D,IAAI,CAAC7B,KAAMjE,KAAKiC,YAC/B,UAAAjC,KAAKoC,mBAAL,SAAkB0D,IAAI,CAAC7B,KAAMjE,KAAKiC,YAClCjC,KAAK6B,OAAOiC,c,6BAGd,SAAgB5E,GAAa,IAAD,YAK1B,OAJAc,KAAKb,SAAS,CACZ0D,UAAW3D,EAAMgB,OAAOtB,QAGlBM,EAAMgB,OAAOtB,OACnB,IAAK,OACH,UAAAoB,KAAKkC,aAAL,SAAY4D,IAAI,CACdjD,UAAW3D,EAAMgB,OAAOtB,MAAOwE,QAASlE,EAAMgB,OAAOtB,MAAOuF,KAAM,KAEpE,UAAAnE,KAAKmC,gBAAL,SAAe2D,IAAI,CACjBjD,UAAW3D,EAAMgB,OAAOtB,MAAOwE,QAASlE,EAAMgB,OAAOtB,MAAOuF,KAAM,KAEpE,MACF,IAAK,SACH,UAAAnE,KAAKkC,aAAL,SAAY4D,IAAI,CACdjD,UAAW3D,EAAMgB,OAAOtB,MAAOwE,QAASlE,EAAMgB,OAAOtB,QAEvD,UAAAoB,KAAKmC,gBAAL,SAAe2D,IAAI,CACjBjD,UAAW3D,EAAMgB,OAAOtB,MAAOwE,QAASlE,EAAMgB,OAAOtB,QAEnDoB,KAAKkC,OAASlC,KAAKmC,WACrBnC,KAAK6B,OAAOkE,cAAc/F,KAAKkC,OAC/BlC,KAAK6B,OAAOkE,cAAc/F,KAAKmC,WAEjC,MACF,IAAK,QACH,UAAAnC,KAAKkC,aAAL,SAAY4D,IAAI,CACdjD,UAAW3D,EAAMgB,OAAOtB,MAAOwE,QAASlE,EAAMgB,OAAOtB,MAAOuF,KAAMnE,KAAKe,MAAQ,KAEjF,UAAAf,KAAKmC,gBAAL,SAAe2D,IAAI,CACjBjD,UAAW3D,EAAMgB,OAAOtB,MAAOwE,QAASlE,EAAMgB,OAAOtB,MAAOuF,KAAMnE,KAAKe,MAAQ,KAIrFf,KAAK6B,OAAOiC,c,wBAGd,SAAWlF,GAAgB,IAAD,MACxB,UAAAoB,KAAKkC,aAAL,SAAY4D,IAAI,CAACc,WAAYhI,IAC7B,UAAAoB,KAAKmC,gBAAL,SAAe2D,IAAI,CAACc,WAAYhI,IAChC,UAAAoB,KAAKoC,mBAAL,SAAkB0D,IAAI,CAACc,WAAYhI,IACnCoB,KAAK6B,OAAOiC,c,yBAGd,WACE,IAAMtB,EAAe,GAKrB,OAJAxC,KAAKwC,MAAMsE,SAAQ,SAAC/D,GAClBP,EAAM3C,KAAK,cAAC6B,EAAD,CAAQ9C,MAAOmE,EAAKL,KAApB,SAA2BK,EAAKN,YAI3C,cAAC,IAAD,CAAQjB,aAAcxB,KAAKwC,MAAM,GAAGE,KAAM5B,MAAO,CAAEC,MAAO,KAAOI,SAAUnB,KAAKsH,WAAWjG,KAAKrB,MAAhG,SACGwC,M,gCAKP,SAAmBtD,GAAa,IAAD,OACvBqI,EAAS,IAAIC,WACnBD,EAAOtI,iBAAiB,QAAQ,WAE3BsI,EAAOhH,QACR,EAAK0F,SAASsB,EAAOhH,OAAOkH,eAE7B,GACCvI,EAAMgB,OAAOwH,MAAM,IACrBH,EAAOI,cAAczI,EAAMgB,OAAOwH,MAAM,M,uBAI5C,WACE,IAAME,EAAInJ,SAASoJ,cAAc,KACjCD,EAAEE,KAAO9H,KAAK6B,OAAOkG,UAAU,CAACC,OAAQ,SACxCJ,EAAEK,SAAW,QACbL,EAAEM,U,oBAGJ,WACE,OACE,qBAAKrH,GAAI,OAAQC,MAAO,CAACqH,UAAW,OAApC,SACE,eAAC,IAAD,CAAKzH,OAAQ,GAAb,UACE,cAAC,IAAD,CAAKC,KAAM,EAAX,SACE,eAAC,IAAD,CAAKD,OAAQ,CAAC,EAAG,IAAjB,UACE,wBAAQG,GAAI,SAAUE,MAAOf,KAAKe,MAAOiB,OAAQhC,KAAKgC,SACtD,cAAC,IAAD,CAAQpB,KAAM,OAAQqG,QAASjH,KAAKoI,UAAU/G,KAAKrB,MAAOc,MAAO,CAACC,MAAO,QAAzE,iDAKJ,cAAC,IAAD,CAAKJ,KAAM,GAAX,SACE,eAAC,IAAD,CAAKD,OAAQ,CAAC,GAAI,IAAlB,UACE,cAAC,IAAD,CAAKC,KAAM,GAAX,SACE,eAAC,IAAD,CAAKD,OAAQ,EAAb,UACE,cAAC,IAAD,CAAKC,KAAM,GAAX,SACE,cAAC,IAAD,CAAO0H,YAAY,eAAK7G,aAAc,aAAcL,SAAUnB,KAAKsI,YAAYjH,KAAKrB,UAEtF,cAAC,IAAD,CAAKW,KAAM,GAAX,SACE,eAAC,IAAD,CAAKM,QAAS,MAAOP,OAAQ,EAA7B,UACE,cAAC,IAAD,UAAMV,KAAKuI,gBACX,cAAC,IAAD,UAAK,cAAC,IAAD,CAAQ3H,KAAM,UAAWqG,QAASjH,KAAKzB,YAAY8C,KAAKrB,MAAOc,MAAO,CAAC+D,MAAO,SAA9E,wCACL,cAAC,IAAD,UACE,eAAC,IAAM2D,MAAP,CAAa5J,MAAOoB,KAAK9B,MAAM2E,UAAW1B,SAAUnB,KAAKyI,gBAAgBpH,KAAKrB,MAA9E,UACE,cAAC,IAAM0I,OAAP,CAAc9J,MAAM,OAApB,SAA2B,cAAC+J,EAAA,EAAD,MAC3B,cAAC,IAAMD,OAAP,CAAc9J,MAAM,SAApB,SAA6B,cAACgK,EAAA,EAAD,MAC7B,cAAC,IAAMF,OAAP,CAAc9J,MAAM,QAApB,SAA4B,cAACiK,EAAA,EAAD,qBAOxC,cAAC,IAAD,CAAKlI,KAAM,GAAX,SACE,cAAC,IAAD,CAAO0H,YAAY,qBAAM7G,aAAc,gBAAiBL,SAAUnB,KAAK8I,eAAezH,KAAKrB,UAE7F,cAAC,IAAD,CAAKW,KAAM,GAAX,SACE,cAAC,IAAD,CAAO0H,YAAY,eACZ7G,aAAa,cACbL,SAAUnB,KAAK+I,kBAAkB1H,KAAKrB,UAE/C,cAAC,IAAD,CAAKW,KAAM,GAAX,SACE,cAAC,IAAD,CAAMuB,MAAM,2BAAO8G,MACjB,eAAC,IAAD,CAAKtI,OAAQ,EAAb,UACE,cAAC,IAAD,UACE,wBAAOuI,UAAU,UAAjB,2CAEE,uBAAOC,QAAQ,EAAM/H,SAAUnB,KAAKmJ,mBAAmB9H,KAAKrB,MAAOY,KAAM,OAAQC,GAAI,6BAGzF,cAAC,IAAD,UAAK,cAAC,IAAD,CAAQoG,QAASjH,KAAK2D,iBAAiBtC,KAAKrB,MAA5C,wCACL,cAAC,IAAD,UACE,cAAC,IAAD,CAAOc,MAAO,CAACC,MAAO,SAAUsH,YAAa,2BAAQlH,SAAUnB,KAAK8C,mBAAmBzB,KAAKrB,aAVlG,SAcE,cAAC,IAAD,CAAKU,OAAQ,CAAC,EAAG,GAAII,MAAO,CAACkB,OAAQ,QAASoH,UAAW,UAAzD,SACGpJ,KAAKqJ,8BAIZ,cAAC,IAAD,CAAK1I,KAAM,GAAX,SACE,cAAC,IAAD,CAAMuB,MAAM,2BAAZ,SACE,cAAC,EAAD,CAAmB3D,YAAayB,KAAKsD,iBAAiBjC,KAAKrB,0B,GA/b3DyB,aCDH6H,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAgD,IAA9CC,EAA6C,EAA7CA,OAAQC,EAAqC,EAArCA,OAAQC,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,QAC1DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFxL,SAASC,eAAe,SAM1B4K,M","file":"static/js/main.30fdef7f.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {Button, Col, Row} from \"antd\";\n\nclass GradientGenerator extends Component<any, any> {\n  constructor(props: {changeColor: Function}) {\n    super(props);\n\n    this.state = {\n      colorA: \"#B149FF\",\n      colorB: \"#00ffff\",\n    };\n\n    window.onload = () => {\n      this.props.changeColor(this.state.colorA, this.state.colorB);\n    }\n  }\n\n  componentDidMount() {\n    let pickerA = document.getElementById(\"color-a\") as HTMLInputElement;\n    let pickerB = document.getElementById(\"color-b\") as HTMLInputElement;\n\n    const colorA = pickerA.value,\n      colorB = pickerB.value;\n\n    let hexTextA = document.getElementById(\"hexTextA\") as HTMLParagraphElement;\n    let hexTextB = document.getElementById(\"hexTextB\") as HTMLParagraphElement;\n\n    let generate = document.getElementById(\"generate\") as HTMLButtonElement;\n\n    hexTextA.innerHTML = colorA;\n    hexTextB.innerHTML = colorB;\n\n    pickerA.addEventListener(\"input\", (event) => {\n      hexTextA.innerHTML = pickerA.value;\n      this.setState({\n        colorA: pickerA.value\n      });\n      this.props.changeColor(pickerA.value, pickerB.value);\n    }, false);\n\n    pickerB.addEventListener(\"input\", (event) => {\n      hexTextB.innerHTML = pickerB.value;\n      this.setState({\n        colorB: pickerB.value\n      });\n      this.props.changeColor(pickerA.value, pickerB.value);\n    }, false);\n\n    generate.addEventListener(\"click\", (event) => {\n      pickerA.value = this.randomColorGenerator();\n      pickerB.value = this.randomColorGenerator();\n      this.props.changeColor(pickerA.value, pickerB.value);\n    })\n  }\n\n  randomColorGenerator() {\n    let characters = [\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",0,1,2,3,4,5,6,7,8,9];\n    let randomColorArray = [];\n    for (let i = 0; i < 6; i++) {\n      let randomIndex = Math.floor(Math.random()*characters.length);\n      randomColorArray.push(characters[randomIndex])\n    }\n\n    return `#${randomColorArray.join(\"\")}`;\n  }\n\n  changeAlpha(events: any) {\n    let pickerA = document.getElementById(\"color-a\") as HTMLInputElement,\n      pickerB = document.getElementById(\"color-b\") as HTMLInputElement;\n\n    let colorA = this.hexToRgb(pickerA.value);\n    let colorB = this.hexToRgb(pickerB.value);\n\n    (document.getElementById(\"color-range\") as HTMLDivElement).innerHTML = `${events.target.value}%`;\n\n    this.props.changeColor(\n      `rgba(${colorA.r}, ${colorA.g}, ${colorA.b}, ${events.target.value}%)`,\n      `rgba(${colorB.r}, ${colorB.g}, ${colorB.b}, ${events.target.value}%)`,\n    );\n  }\n\n  hexToRgb(hex: string): {r: number, g: number, b: number} {\n    let result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? {\n      r: parseInt(result[1], 16),\n      g: parseInt(result[2], 16),\n      b: parseInt(result[3], 16)\n    } : {r: 0, g: 0, b: 0};\n  }\n\n  render() {\n    return (\n      <Row gutter={[8, 8]}>\n        <Col span={12}>\n          <form>\n            <input type=\"color\" id=\"color-a\" style={{width: '100%'}} value={this.state.colorA}/>\n            <p id=\"hexTextA\"></p>\n          </form>\n        </Col>\n        <Col span={12}>\n          <form>\n            <input type=\"color\" id=\"color-b\" style={{width: '100%'}} value={this.state.colorB}/>\n            <p id=\"hexTextB\"></p>\n          </form>\n        </Col>\n        <Col span={24}>\n          <Button id=\"generate\" block>随机背景色</Button>\n        </Col>\n        <Col span={24}>\n          <form>\n            <Row gutter={[4, 4]} justify={\"center\"} align={\"middle\"}>\n              <Col span={24}> Alpha <span id={\"color-range\"}>100%</span> </Col>\n              <Col span={24}>\n                <input type=\"range\" id=\"alpha\" style={{width: '100%'}} onChange={this.changeAlpha.bind(this)} min=\"60\" max=\"100\" defaultValue={100}/>\n              </Col>\n            </Row>\n          </form>\n        </Col>\n      </Row>\n    )\n  }\n}\n\n\nexport default GradientGenerator;\n","import React, {Component} from 'react';\nimport './App.scss';\nimport GradientGenerator from \"./gradient-generator\"\nimport {fabric} from \"fabric\";\nimport * as blobs2 from \"blobs/v2\";\nimport {Button, Card, Col, Image, Input, Row, Radio, Select} from 'antd';\nimport {\n  AlignCenterOutlined,\n  AlignLeftOutlined,\n  AlignRightOutlined\n} from '@ant-design/icons';\n\nconst { Option } = Select;\n\n\nclass App extends Component<any, any> {\n  private canvas: fabric.Canvas = new fabric.Canvas('canvas');\n  public width = 396;\n  public height = 560;\n  public fontColor: string = \"white\";\n  public title: fabric.Text | undefined;\n  public subTitle: fabric.Text | undefined;\n  public description: fabric.Text | undefined;\n  public blob: fabric.Object | undefined;\n  public background: fabric.Object | undefined;\n  public illustration: fabric.Object | undefined;\n\n  public fonts = [\n    {label: \"思源黑体\", name: \"SourceHanSansSC-Regular\"},\n    {label: \"思源黑体 HW Bold\", name: \"SourceHanSansHWSC-Bold\"},\n    {label: \"思源黑体 HW\", name: \"SourceHanSansHWSC-Regular\"},\n    {label: \"思源黑体 Medium\", name: \"SourceHanSansSC-Medium\"},\n    {label: \"思源黑体 Normal\", name: \"SourceHanSansSC-Normal\"},\n  ];\n\n  private illustrationList: { name: string, path: string }[] = [\n    {name: 'bird', path: \"/assets/images/illustration/bird.svg\"},\n    {name: 'bird-1', path: \"/assets/images/illustration/bird-1.svg\"},\n  ]\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      textAlign: 'center',\n      filterIllustration: \"\",\n      font: this.fonts[0].name\n    };\n  }\n\n  componentDidMount() {\n    this.renderCanvas();\n  }\n\n  renderCanvas() {\n    this.canvas = new fabric.Canvas('canvas');\n    fabric.Object.prototype.transparentCorners = false;\n    fabric.Object.prototype.originX = fabric.Object.prototype.originY = 'center';\n\n    this.renderBackground(\"grey\", \"grey\");\n    this.renderLogo();\n    this.renderTitle();\n    this.renderSubTitle();\n    this.renderDescription();\n    this.renderRandomBlob();\n\n    const defaultIllustration = this.illustrationList[Math.floor(Math.random() * this.illustrationList.length)]\n    this.renderIllustration(defaultIllustration.path);\n    this.canvas.renderAll();\n  }\n\n  renderBackground(colorA: string, colorB: string) {\n    if (this.background) {\n      this.canvas.remove(this.background);\n    }\n    this.background = new fabric.Rect({\n      fill: '#f55',\n      top: this.height / 2,\n      left: this.width / 2,\n      width: 396,\n      height: 560,\n      selectable: false\n    });\n\n    const grad = new fabric.Gradient({\n      type: 'linear',\n      coords: {\n        x1: 0,\n        y1: 0,\n        x2: this.canvas.width,\n        y2: this.canvas.height,\n      },\n      colorStops: [\n        {\n          color: colorA,\n          offset: \"0\",\n        },\n        {\n          color: colorB,\n          offset: \"1\",\n        }\n      ]\n    });\n    this.background.fill = grad;\n    this.canvas.add(this.background);\n    this.background.sendToBack();\n    this.canvas.renderAll();\n  }\n\n  renderRandomBlob() {\n    if (this.blob) {\n      this.canvas.remove(this.blob);\n    }\n    let svgString = blobs2.svg(\n      {\n        seed: Math.random(),\n        extraPoints: 4,\n        randomness: 3,\n        size: 256,\n      },\n      {\n        fill: \"rgba(255,255,255,0.1)\", // 🚨 NOT SANITIZED\n        stroke: \"none\", // 🚨 NOT SANITIZED\n        strokeWidth: 4,\n      },\n    );\n\n    fabric.loadSVGFromString(svgString, (objects, options) => {\n      this.blob = fabric.util.groupSVGElements(objects, options);\n      this.blob.set({\n        top: this.height / 2,\n        originX: \"center\",\n        originY: \"top\",\n        selectable: false\n      })\n      this.canvas.centerObjectH(this.blob)\n      this.canvas.add(this.blob.scale(1));\n      this.canvas.renderAll();\n    });\n  }\n\n  renderIllustration(path: string) {\n    if (this.illustration) {\n      this.canvas.remove(this.illustration);\n    }\n    this.setImage(path);\n  }\n\n  private setImage(path: string) {\n    fabric.Image.fromURL(path, (image: fabric.Image) => {\n      if (image && image.width && image.height) {\n        let scaleX = 200 / image.width;\n        let scaleY = (image.height * scaleX) / image.height;;\n        image.set({\n          scaleY: scaleY,\n          scaleX: scaleX,\n          top: this.height / 2 + ((256-(image.height * scaleX))/2),\n          originX: \"center\",\n          originY: \"top\",\n          selectable: false\n        })\n      }\n      if (this.illustration) {\n        this.canvas.remove(this.illustration);\n      }\n\n      this.illustration = image;\n      this.canvas.add(this.illustration);\n      this.canvas.centerObjectH(this.illustration);\n      this.canvas.renderAll();\n    });\n  }\n\n  renderLogo() {\n    fabric.loadSVGFromURL('/assets/images/logo-fill.svg', (objects, options) => {\n      let shape = fabric.util.groupSVGElements(objects, options);\n      shape.set({\n        top: 10,\n        left: 10,\n        originX: \"left\",\n        originY: \"top\",\n        selectable: false\n      })\n      this.canvas.add(shape.scale(0.07));\n      this.canvas.renderAll();\n    });\n  }\n\n\n  changeTitle(event: any = null) {\n    this.title?.set({text: event.target.value});\n    this.canvas.renderAll();\n  }\n\n  renderTitle() {\n    let string = \"Book Title\";\n    this.title = new fabric.Text(string, {\n      fontSize: 32,\n      fontFamily: this.state.font,\n      originX: 'center',\n      originY: 'center',\n      top: 80,\n      fill: this.fontColor,\n      textAlign: 'center',\n      selectable: false\n    });\n\n    this.canvas.centerObjectH(this.title);\n    this.canvas.add(this.title);\n  }\n\n  changeSubTitle(event: any = null) {\n    this.subTitle?.set({text: event.target.value})\n    this.canvas.renderAll();\n  }\n\n  renderSubTitle() {\n    this.subTitle = new fabric.Text('Book SubTitle', {\n      fontSize: 22,\n      fontFamily: this.state.font,\n      originX: 'center',\n      originY: 'center',\n      top: 120,\n      fill: this.fontColor,\n      selectable: false\n    });\n    this.canvas.centerObjectH(this.subTitle);\n    this.canvas.add(this.subTitle);\n  }\n\n  changeDescription(event: any = null) {\n    this.description?.set({text: event.target.value})\n    this.canvas.renderAll();\n  }\n\n  renderDescription() {\n    this.description = new fabric.Text('Description', {\n      fontSize: 14,\n      fontFamily: this.state.font,\n      originX: 'center',\n      originY: 'center',\n      top: this.height - 20,\n      fill: this.fontColor,\n      selectable: false\n    });\n    this.canvas.centerObjectH(this.description);\n    this.canvas.add(this.description);\n  }\n\n  filterIllustration(event: any = null) {\n    this.setState({\n      filterIllustration: event.target.value,\n    })\n  }\n\n  renderIllustrationBox() {\n    const list: any[] = [];\n    this.illustrationList.forEach(illustration => {\n      if (this.state.filterIllustration && this.state.filterIllustration.length) {\n        if (illustration.name.search(this.state.filterIllustration) > -1) {\n          list.push(\n            <Col span={6}>\n              <Card\n                hoverable\n                style={{width: \"100%\"}}\n              >\n                <Image\n                  onClick={() => this.renderIllustration(illustration.path)}\n                  preview={false}\n                  width={\"100%\"}\n                  src={illustration.path}\n                />\n                <Button block type={\"text\"}\n                        onClick={() => this.renderIllustration(illustration.path)}>{illustration.name}</Button>\n              </Card>\n            </Col>\n          );\n        }\n      } else {\n        list.push(\n          <Col span={6}>\n            <Card\n              hoverable\n              style={{width: \"100%\"}}\n            >\n              <Image\n                onClick={() => this.renderIllustration(illustration.path)}\n                preview={false}\n                width={\"100%\"}\n                src={illustration.path}\n              />\n              <Button block type={\"text\"}\n                      onClick={() => this.renderIllustration(illustration.path)}>{illustration.name}</Button>\n            </Card>\n          </Col>\n        );\n      }\n    })\n\n    return list;\n  }\n\n  changeColor(event: any) {\n    let target = event.target;\n    if (target.tagName === \"SPAN\") {\n      target = event.target.parentElement;\n    }\n    if (target.style.color === \"white\") {\n      target.style.color = \"black\";\n    } else {\n      target.style.color = \"white\";\n    }\n\n    this.fontColor = target.style.color;\n\n    this.title?.set({fill: this.fontColor});\n    this.subTitle?.set({fill: this.fontColor});\n    this.description?.set({fill: this.fontColor});\n    this.canvas.renderAll();\n  }\n\n  changeTextAlign(event: any) {\n    this.setState({\n      textAlign: event.target.value\n    });\n\n    switch (event.target.value) {\n      case \"left\":\n        this.title?.set({\n          textAlign: event.target.value, originX: event.target.value, left: 65,\n        });\n        this.subTitle?.set({\n          textAlign: event.target.value, originX: event.target.value, left: 65,\n        });\n        break;\n      case \"center\":\n        this.title?.set({\n          textAlign: event.target.value, originX: event.target.value,\n        });\n        this.subTitle?.set({\n          textAlign: event.target.value, originX: event.target.value,\n        });\n        if (this.title && this.subTitle) {\n          this.canvas.centerObjectH(this.title);\n          this.canvas.centerObjectH(this.subTitle);\n        }\n        break;\n      case \"right\":\n        this.title?.set({\n          textAlign: event.target.value, originX: event.target.value, left: this.width - 65,\n        });\n        this.subTitle?.set({\n          textAlign: event.target.value, originX: event.target.value, left: this.width - 65,\n        });\n        break;\n    }\n    this.canvas.renderAll();\n  }\n\n  selectFont(value: string) {\n    this.title?.set({fontFamily: value});\n    this.subTitle?.set({fontFamily: value});\n    this.description?.set({fontFamily: value});\n    this.canvas.renderAll();\n  }\n\n  renderFonts() {\n    const fonts: any[] = [];\n    this.fonts.forEach((font: any) => {\n      fonts.push(<Option value={font.name}>{font.label}</Option>);\n    });\n\n    return (\n      <Select defaultValue={this.fonts[0].name} style={{ width: 150 }} onChange={this.selectFont.bind(this)}>\n        {fonts}\n      </Select>\n    );\n  }\n\n  uploadIllustration(event: any) {\n    const reader = new FileReader();\n    reader.addEventListener(\"load\", () => {\n      // convert image file to base64 string\n      if(reader.result) {\n        this.setImage(reader.result.toString());\n      }\n    }, false);\n    if (event.target.files[0]) {\n      reader.readAsDataURL(event.target.files[0]);\n    }\n  }\n\n  saveCover() {\n    const d = document.createElement(\"a\");\n    d.href = this.canvas.toDataURL({format: 'jpeg'});\n    d.download = \"cover\";\n    d.click();\n  }\n\n  render() {\n    return (\n      <div id={\"main\"} style={{marginTop: '5vh'}}>\n        <Row gutter={16}>\n          <Col span={8}>\n            <Row gutter={[8, 16]}>\n              <canvas id={\"canvas\"} width={this.width} height={this.height}></canvas>\n              <Button type={\"link\"} onClick={this.saveCover.bind(this)} style={{width: '100%'}}>\n                保存存图片\n              </Button>\n            </Row>\n          </Col>\n          <Col span={16}>\n            <Row gutter={[16, 16]}>\n              <Col span={24}>\n                <Row gutter={8}>\n                  <Col span={12}>\n                    <Input placeholder=\"标题\" defaultValue={\"Book Title\"} onChange={this.changeTitle.bind(this)} />\n                  </Col>\n                  <Col span={12}>\n                    <Row justify={\"end\"} gutter={8}>\n                      <Col>{this.renderFonts()}</Col>\n                      <Col><Button type={\"primary\"} onClick={this.changeColor.bind(this)} style={{color: 'white'}}>字体颜色</Button></Col>\n                      <Col>\n                        <Radio.Group value={this.state.textAlign} onChange={this.changeTextAlign.bind(this)}>\n                          <Radio.Button value=\"left\"><AlignLeftOutlined /></Radio.Button>\n                          <Radio.Button value=\"center\"><AlignCenterOutlined /></Radio.Button>\n                          <Radio.Button value=\"right\"><AlignRightOutlined /></Radio.Button>\n                        </Radio.Group>\n                      </Col>\n                    </Row>\n                  </Col>\n                </Row>\n              </Col>\n              <Col span={24}>\n                <Input placeholder=\"副标题\" defaultValue={\"Book SubTitle\"} onChange={this.changeSubTitle.bind(this)} />\n              </Col>\n              <Col span={24}>\n                <Input placeholder=\"描述\"\n                       defaultValue=\"Description\"\n                       onChange={this.changeDescription.bind(this)} />\n              </Col>\n              <Col span={24}>\n                <Card title=\"选择插画\" extra={\n                  <Row gutter={8}>\n                    <Col>\n                      <label className=\"ant-btn\">\n                        自定义插画\n                        <input hidden={true} onChange={this.uploadIllustration.bind(this)} type={'file'} id={'upload-illustration'} />\n                      </label>\n                    </Col>\n                    <Col><Button onClick={this.renderRandomBlob.bind(this)}>更换背景</Button></Col>\n                    <Col>\n                      <Input style={{width: '300px'}} placeholder={'筛选插画'} onChange={this.filterIllustration.bind(this)}/>\n                    </Col>\n                  </Row>\n                }>\n                  <Row gutter={[8, 8]} style={{height: '300px', overflowY: 'scroll'}}>\n                    {this.renderIllustrationBox()}\n                  </Row>\n                </Card>\n              </Col>\n              <Col span={24}>\n                <Card title=\"设置背景\">\n                  <GradientGenerator changeColor={this.renderBackground.bind(this)} />\n                </Card>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import {ReportHandler} from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}